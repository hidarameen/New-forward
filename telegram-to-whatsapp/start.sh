#!/bin/bash

# ุณูุฑูุจุช ุชุดุบูู ูุธุงู ุชูุฌูู ุชููุฌุฑุงู ุฅูู ูุงุชุณุงุจ
# Telegram to WhatsApp Bridge Startup Script

echo "๐ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo "๐    ูุธุงู ุชูุฌูู ุชููุฌุฑุงู โ ูุงุชุณุงุจ"
echo "๐    Telegram โ WhatsApp Bridge"
echo "๐ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

# ุฃููุงู ูููุต
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ุฏูุงู ุงููุณุงุนุฏุฉ
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ุงูุชุญูู ูู ุงููุชุทูุจุงุช
check_requirements() {
    print_status "ูุญุต ุงููุชุทูุจุงุช..."
    print_status "Checking requirements..."
    
    # ุงูุชุญูู ูู Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js ุบูุฑ ูุซุจุช"
        print_error "Node.js is not installed"
        echo "๐ Download: https://nodejs.org"
        exit 1
    fi
    
    # ุงูุชุญูู ูู ุฅุตุฏุงุฑ Node.js
    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 16 ]; then
        print_warning "ุฅุตุฏุงุฑ Node.js ูุฏูู. ูููุตุญ ุจุงูุฅุตุฏุงุฑ 16 ุฃู ุฃุญุฏุซ"
        print_warning "Old Node.js version. Version 16 or newer is recommended"
    fi
    
    # ุงูุชุญูู ูู npm
    if ! command -v npm &> /dev/null; then
        print_error "npm ุบูุฑ ูุซุจุช"
        print_error "npm is not installed"
        exit 1
    fi
    
    # ุงูุชุญูู ูู Python
    if ! command -v python3 &> /dev/null; then
        print_error "Python 3 ุบูุฑ ูุซุจุช"
        print_error "Python 3 is not installed"
        echo "๐ Download: https://python.org"
        exit 1
    fi
    
    # ุงูุชุญูู ูู pip
    if ! command -v pip3 &> /dev/null; then
        print_error "pip3 ุบูุฑ ูุซุจุช"
        print_error "pip3 is not installed"
        exit 1
    fi
    
    print_success "ุฌููุน ุงููุชุทูุจุงุช ูุชููุฑุฉ"
    print_success "All requirements met"
    echo "  Node.js: $(node -v)"
    echo "  npm: $(npm -v)"
    echo "  Python: $(python3 --version)"
    echo "  pip: $(pip3 --version | cut -d' ' -f2)"
}

# ุชุซุจูุช ุงูุชุจุนูุงุช
install_dependencies() {
    print_status "ุชุซุจูุช ุงูุชุจุนูุงุช..."
    print_status "Installing dependencies..."
    
    # ุชุจุนูุงุช Node.js
    if [ ! -d "node_modules" ]; then
        print_status "ุชุซุจูุช ุชุจุนูุงุช Node.js..."
        print_status "Installing Node.js dependencies..."
        npm install
        
        if [ $? -ne 0 ]; then
            print_error "ูุดู ูู ุชุซุจูุช ุชุจุนูุงุช Node.js"
            print_error "Failed to install Node.js dependencies"
            exit 1
        fi
    else
        print_success "ุชุจุนูุงุช Node.js ูุซุจุชุฉ ูุณุจูุงู"
        print_success "Node.js dependencies already installed"
    fi
    
    # ุชุจุนูุงุช Python
    print_status "ุชุซุจูุช ุชุจุนูุงุช Python..."
    print_status "Installing Python dependencies..."
    pip3 install -r requirements.txt --quiet
    
    if [ $? -ne 0 ]; then
        print_error "ูุดู ูู ุชุซุจูุช ุชุจุนูุงุช Python"
        print_error "Failed to install Python dependencies"
        exit 1
    fi
    
    print_success "ุชู ุชุซุจูุช ุฌููุน ุงูุชุจุนูุงุช ุจูุฌุงุญ"
    print_success "All dependencies installed successfully"
}

# ุงูุชุญูู ูู ุงูุฅุนุฏุงุฏุงุช
check_configuration() {
    print_status "ูุญุต ุงูุฅุนุฏุงุฏุงุช..."
    print_status "Checking configuration..."
    
    # ุงูุชุญูู ูู ููู .env
    if [ ! -f ".env" ]; then
        print_warning "ููู .env ุบูุฑ ููุฌูุฏุ ุฌุงุฑู ุฅูุดุงุคู..."
        print_warning ".env file not found, creating it..."
        
        if [ -f ".env.example" ]; then
            cp .env.example .env
            print_warning "ุชู ุฅูุดุงุก ููู .env ูู .env.example"
            print_warning ".env file created from .env.example"
            print_warning "ูุฑุฌู ุชุญุฑูุฑ ููู .env ูุฅุถุงูุฉ TELEGRAM_BOT_TOKEN"
            print_warning "Please edit .env file and add TELEGRAM_BOT_TOKEN"
            echo ""
            echo "nano .env"
            echo ""
            exit 1
        else
            print_error "ููู .env.example ุบูุฑ ููุฌูุฏ"
            print_error ".env.example file not found"
            exit 1
        fi
    fi
    
    # ุงูุชุญูู ูู ุชููู ุงูุจูุช
    if ! grep -q "TELEGRAM_BOT_TOKEN=" .env || grep -q "TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here" .env; then
        print_error "TELEGRAM_BOT_TOKEN ุบูุฑ ูุญุฏุฏ ูู ููู .env"
        print_error "TELEGRAM_BOT_TOKEN not set in .env file"
        print_warning "ุงุญุตู ุนูู ุงูุชููู ูู @BotFather ูู ุชููุฌุฑุงู"
        print_warning "Get the token from @BotFather in Telegram"
        exit 1
    fi
    
    print_success "ุงูุฅุนุฏุงุฏุงุช ุตุญูุญุฉ"
    print_success "Configuration is valid"
}

# ุฅูุดุงุก ุงููุฌูุฏุงุช ุงูุถุฑูุฑูุฉ
create_directories() {
    print_status "ุฅูุดุงุก ุงููุฌูุฏุงุช ุงูุถุฑูุฑูุฉ..."
    print_status "Creating necessary directories..."
    
    mkdir -p logs
    mkdir -p .wwebjs_auth
    
    print_success "ุชู ุฅูุดุงุก ุงููุฌูุฏุงุช"
    print_success "Directories created"
}

# ุงูุชุญูู ูู ุงูููุงูุฐ
check_ports() {
    PORT=${PORT:-3000}
    
    if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
        print_warning "ุงููููุฐ $PORT ูุณุชุฎุฏู ุจุงููุนู"
        print_warning "Port $PORT is already in use"
        
        read -p "ูู ุชุฑูุฏ ุฅููุงู ุงูุฎุฏูุฉ ุงูุนุงููุฉ ูุงููุชุงุจุนุฉุ (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            print_status "ูุญุงููุฉ ุฅููุงู ุงูุฎุฏูุฉ ุนูู ุงููููุฐ $PORT..."
            lsof -ti:$PORT | xargs kill -9 2>/dev/null
            sleep 2
        else
            print_error "ุชู ุฅูุบุงุก ุงูุชุดุบูู"
            print_error "Startup cancelled"
            exit 1
        fi
    fi
}

# ุชุดุบูู ุงููุธุงู
start_system() {
    print_status "ุจุฏุก ุชุดุบูู ุงููุธุงู..."
    print_status "Starting system..."
    
    # ุชุดุบูู ุฎุงุฏู ูุงุชุณุงุจ ูู ุงูุฎูููุฉ
    print_status "ุชุดุบูู ุฎุงุฏู ูุงุชุณุงุจ..."
    print_status "Starting WhatsApp server..."
    
    # ุฅูุดุงุก ููู pid ูุชุชุจุน ุงูุนูููุงุช
    echo $$ > .bridge.pid
    
    # ุชุดุบูู Node.js server
    node app.js &
    WHATSAPP_PID=$!
    echo $WHATSAPP_PID > .whatsapp.pid
    
    # ุงูุชุธุงุฑ ูููู ููุชุฃูุฏ ูู ุจุฏุก ุงูุฎุงุฏู
    sleep 3
    
    # ุงูุชุญูู ูู ุฃู ุงูุฎุงุฏู ูุนูู
    if ! ps -p $WHATSAPP_PID > /dev/null 2>&1; then
        print_error "ูุดู ูู ุชุดุบูู ุฎุงุฏู ูุงุชุณุงุจ"
        print_error "Failed to start WhatsApp server"
        cleanup
        exit 1
    fi
    
    print_success "ุฎุงุฏู ูุงุชุณุงุจ ูุนูู (PID: $WHATSAPP_PID)"
    print_success "WhatsApp server running (PID: $WHATSAPP_PID)"
    
    # ุงูุชุธุงุฑ ูููู ุซู ุชุดุบูู ุจูุช ุชููุฌุฑุงู
    print_status "ุชุดุบูู ุจูุช ุชููุฌุฑุงู..."
    print_status "Starting Telegram bot..."
    
    sleep 2
    python3 telegram_bot.py &
    TELEGRAM_PID=$!
    echo $TELEGRAM_PID > .telegram.pid
    
    # ุงูุชุญูู ูู ุฃู ุงูุจูุช ูุนูู
    sleep 2
    if ! ps -p $TELEGRAM_PID > /dev/null 2>&1; then
        print_error "ูุดู ูู ุชุดุบูู ุจูุช ุชููุฌุฑุงู"
        print_error "Failed to start Telegram bot"
        cleanup
        exit 1
    fi
    
    print_success "ุจูุช ุชููุฌุฑุงู ูุนูู (PID: $TELEGRAM_PID)"
    print_success "Telegram bot running (PID: $TELEGRAM_PID)"
}

# ุชูุธูู ุงูุนูููุงุช
cleanup() {
    print_status "ุชูุธูู ุงูุนูููุงุช..."
    print_status "Cleaning up processes..."
    
    if [ -f ".whatsapp.pid" ]; then
        WHATSAPP_PID=$(cat .whatsapp.pid)
        if ps -p $WHATSAPP_PID > /dev/null 2>&1; then
            kill $WHATSAPP_PID 2>/dev/null
            print_status "ุชู ุฅููุงู ุฎุงุฏู ูุงุชุณุงุจ"
            print_status "WhatsApp server stopped"
        fi
        rm -f .whatsapp.pid
    fi
    
    if [ -f ".telegram.pid" ]; then
        TELEGRAM_PID=$(cat .telegram.pid)
        if ps -p $TELEGRAM_PID > /dev/null 2>&1; then
            kill $TELEGRAM_PID 2>/dev/null
            print_status "ุชู ุฅููุงู ุจูุช ุชููุฌุฑุงู"
            print_status "Telegram bot stopped"
        fi
        rm -f .telegram.pid
    fi
    
    rm -f .bridge.pid
}

# ูุนุงูุฌ ุงูุฅุดุงุฑุงุช
signal_handler() {
    echo ""
    print_status "ุชู ุงุณุชูุงู ุฅุดุงุฑุฉ ุงูุฅููุงู..."
    print_status "Stop signal received..."
    cleanup
    print_success "ุชู ุฅููุงู ุงููุธุงู ุจุฃูุงู"
    print_success "System stopped safely"
    exit 0
}

# ุฑุจุท ูุนุงูุฌ ุงูุฅุดุงุฑุงุช
trap signal_handler SIGINT SIGTERM

# ุนุฑุถ ูุนูููุงุช ุงููุธุงู
show_system_info() {
    echo ""
    echo "๐ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
    echo "๐    ูุนูููุงุช ุงููุธุงู | System Info"
    echo "๐ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
    echo "๐ฑ ููุญุฉ ุงูุชุญูู | Control Panel:"
    echo "   http://localhost:${PORT:-3000}"
    echo ""
    echo "๐ API ุงูุญุงูุฉ | Status API:"
    echo "   http://localhost:${PORT:-3000}/api/status"
    echo ""
    echo "๐ ูููุงุช ุงูุณุฌูุงุช | Log Files:"
    echo "   logs/telegram_bot.log"
    echo "   logs/system.log"
    echo ""
    echo "โจ๏ธ  ุงุฎุชุตุงุฑุงุช ูููุฏุฉ | Useful Commands:"
    echo "   Ctrl+C : ุฅููุงู ุงููุธุงู | Stop System"
    echo "   tail -f logs/telegram_bot.log : ูุฑุงูุจุฉ ุณุฌูุงุช ุชููุฌุฑุงู"
    echo "   tail -f logs/system.log : ูุฑุงูุจุฉ ุณุฌูุงุช ุงููุธุงู"
    echo ""
    echo "๐ง ุงุณุชูุดุงู ุงูุฃุฎุทุงุก | Troubleshooting:"
    echo "   curl http://localhost:${PORT:-3000}/api/status"
    echo "   ps aux | grep -E '(node|python)'"
    echo ""
    echo "๐ ูุฅููุงู ุงููุธุงู | To Stop System:"
    echo "   pkill -f 'node app.js'"
    echo "   pkill -f 'python3 telegram_bot.py'"
    echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
    echo ""
}

# ุงูุจุฏุก ุงูุฑุฆูุณู
main() {
    # ูุญุต ุงููุนุงููุงุช
    case "${1:-start}" in
        "start")
            check_requirements
            install_dependencies
            check_configuration
            create_directories
            check_ports
            start_system
            show_system_info
            
            # ุงูุชุธุงุฑ ุญุชู ุงูุฅููุงู
            print_success "ุงููุธุงู ูุนูู ุจูุฌุงุญ!"
            print_success "System running successfully!"
            print_status "ุงุถุบุท Ctrl+C ููุฅููุงู"
            print_status "Press Ctrl+C to stop"
            
            # ูุฑุงูุจุฉ ุงูุนูููุงุช
            while true; do
                # ุงูุชุญูู ูู ุฎุงุฏู ูุงุชุณุงุจ
                if [ -f ".whatsapp.pid" ]; then
                    WHATSAPP_PID=$(cat .whatsapp.pid)
                    if ! ps -p $WHATSAPP_PID > /dev/null 2>&1; then
                        print_error "ุฎุงุฏู ูุงุชุณุงุจ ุชููู ุจุดูู ุบูุฑ ูุชููุน"
                        print_error "WhatsApp server stopped unexpectedly"
                        cleanup
                        exit 1
                    fi
                fi
                
                # ุงูุชุญูู ูู ุจูุช ุชููุฌุฑุงู
                if [ -f ".telegram.pid" ]; then
                    TELEGRAM_PID=$(cat .telegram.pid)
                    if ! ps -p $TELEGRAM_PID > /dev/null 2>&1; then
                        print_warning "ุจูุช ุชููุฌุฑุงู ุชูููุ ุฌุงุฑู ุฅุนุงุฏุฉ ุงูุชุดุบูู..."
                        print_warning "Telegram bot stopped, restarting..."
                        python3 telegram_bot.py &
                        TELEGRAM_PID=$!
                        echo $TELEGRAM_PID > .telegram.pid
                    fi
                fi
                
                sleep 10
            done
            ;;
            
        "stop")
            print_status "ุฅููุงู ุงููุธุงู..."
            print_status "Stopping system..."
            cleanup
            print_success "ุชู ุฅููุงู ุงููุธุงู"
            print_success "System stopped"
            ;;
            
        "restart")
            print_status "ุฅุนุงุฏุฉ ุชุดุบูู ุงููุธุงู..."
            print_status "Restarting system..."
            cleanup
            sleep 2
            $0 start
            ;;
            
        "status")
            print_status "ูุญุต ุญุงูุฉ ุงููุธุงู..."
            print_status "Checking system status..."
            
            if [ -f ".whatsapp.pid" ]; then
                WHATSAPP_PID=$(cat .whatsapp.pid)
                if ps -p $WHATSAPP_PID > /dev/null 2>&1; then
                    print_success "ุฎุงุฏู ูุงุชุณุงุจ ูุนูู (PID: $WHATSAPP_PID)"
                    print_success "WhatsApp server running (PID: $WHATSAPP_PID)"
                else
                    print_error "ุฎุงุฏู ูุงุชุณุงุจ ูุชููู"
                    print_error "WhatsApp server stopped"
                fi
            else
                print_error "ุฎุงุฏู ูุงุชุณุงุจ ุบูุฑ ููุดุบู"
                print_error "WhatsApp server not running"
            fi
            
            if [ -f ".telegram.pid" ]; then
                TELEGRAM_PID=$(cat .telegram.pid)
                if ps -p $TELEGRAM_PID > /dev/null 2>&1; then
                    print_success "ุจูุช ุชููุฌุฑุงู ูุนูู (PID: $TELEGRAM_PID)"
                    print_success "Telegram bot running (PID: $TELEGRAM_PID)"
                else
                    print_error "ุจูุช ุชููุฌุฑุงู ูุชููู"
                    print_error "Telegram bot stopped"
                fi
            else
                print_error "ุจูุช ุชููุฌุฑุงู ุบูุฑ ููุดุบู"
                print_error "Telegram bot not running"
            fi
            ;;
            
        "help"|"-h"|"--help")
            echo "ุงูุงุณุชุฎุฏุงู | Usage:"
            echo "  $0 [start|stop|restart|status|help]"
            echo ""
            echo "ุงูุฃูุงูุฑ | Commands:"
            echo "  start    - ุชุดุบูู ุงููุธุงู (ุงูุชุฑุงุถู) | Start system (default)"
            echo "  stop     - ุฅููุงู ุงููุธุงู | Stop system"  
            echo "  restart  - ุฅุนุงุฏุฉ ุชุดุบูู ุงููุธุงู | Restart system"
            echo "  status   - ูุญุต ุญุงูุฉ ุงููุธุงู | Check system status"
            echo "  help     - ุนุฑุถ ูุฐู ุงููุณุงุนุฏุฉ | Show this help"
            ;;
            
        *)
            print_error "ุฃูุฑ ุบูุฑ ูุนุฑูู: $1"
            print_error "Unknown command: $1"
            echo "ุงุณุชุฎุฏู '$0 help' ูููุณุงุนุฏุฉ"
            echo "Use '$0 help' for help"
            exit 1
            ;;
    esac
}

# ุชุดุบูู ุงูุจุฑูุงูุฌ ุงูุฑุฆูุณู
main "$@"